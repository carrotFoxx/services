{
	"info": {
		"_postman_id": "d2e8a7e4-80b7-4b0b-be1e-c6d99f0576d7",
		"name": "Buldozer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "applications",
			"item": [
				{
					"name": "list apps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "create app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f0c67fd-0567-4090-9b0f-1faf3a225a92",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"busybox:latest\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53bd1548-89c9-4839-9aa0-aec62e4de790",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d029403f-b3d7-4bfa-a4c8-9ecca097e4c8",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"consul sync test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"buldozer_subordinate:latest\",\n\t\"environment\":{\n\t\t\"LOG_LEVEL\":\"DEBUG\",\n\t\t\"BDZ_PROGRAM\":\"cat\"\n\t}\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ae9a2a8-aa39-496c-9dab-2516df977e75",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit app version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a329927-d34c-4124-8a08-09f4c4c71c7a",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app version by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c67a1ef6-f629-46aa-b393-c4be9c06d9b2",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload is object\"] = Object.isPrototypeOf(jsonData)",
									"tests[\"Payload has version as in request\"] = jsonData.version == pm.environment.get(ENV_PREFIX+'ver')"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions/{{app-mgr.last-created-ver}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions",
								"{{app-mgr.last-created-ver}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload app artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffd51238-09f5-4311-aa4f-3a913cb3a5fb",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "models",
			"item": [
				{
					"name": "list models",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "create model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "261bc557-049f-43d8-8632-abfb4c75dfb4",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "get model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64565240-1641-4edd-8517-28c17edf18ca",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit model version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55a65acc-b1f8-449c-875f-595692bca22c",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{model-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b7cf649-babf-4dbc-9a7c-06641f7ce917",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "download model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38ec7321-16e6-49ab-bfa5-bcff9411c5fa",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/versions/{{model-mgr.last-created-ver}}/download",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"versions",
								"{{model-mgr.last-created-ver}}",
								"download"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "images",
			"item": [
				{
					"name": "create analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0 or equal\"] = scn_version >= 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"id": "6f2812f0-5ec0-441a-b55f-ebeb637bb9b5"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete analyzer image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list analyzer images",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"id": "7ae6eec2-bdf7-4b56-8f48-98aa19c92618"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "get analyzer image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name changed\"] = jsonData.name == \"test_updated\";",
									""
								],
								"id": "e69766e0-f97d-47cd-abd4-bc4b9a5423cd"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test_updated\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit analyzer image to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2598f1c5-605f-4e87-875d-8c19693f6635",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"scn_version = jsonData.version;",
									"",
									"tests[\"Etag is greater or equal than 0\"] = scn_version >= 0;",
									"",
									"tests[\"Version is greater than 0\"] = scn_version > postman.getEnvironmentVariable(ENV_PREFIX + \"ver\");",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "workspaces",
			"item": [
				{
					"name": "create workspace Producer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a4cd5ce-4d3b-486b-a75a-82e2186bb916",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"A\",\n\t\n\t\"type\":\"producer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12c47edc-b343-49bc-a8e1-51692088274e",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"H\",\n\t\n\t\"type\":\"consumer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24857fd5-6d5a-491c-b830-fb91030561cd",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"M\",\n\t\n\t\"type\":\"workspace\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b606ef9c-f0a9-4af0-83e8-c43749200131",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace route conf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace neighbors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/neighbors",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"neighbors"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspaces chain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/chain",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"chain"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Producer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"outgoing_stream\": \"outgoing\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Consumer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"incoming\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"3\", \n\t\"outgoing_stream\": \"4\",\n\t\"pause_stream\": \"false\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "script",
			"item": [
				{
					"name": "create chain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa595660-f088-47b3-b666-44438e5a4b7d",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"uid\": \"3454f7e41bf14c9f93a44a3f1de6c1b6\",\n\t\"name\":\"A\",\n\t\"wr\":\n\t[{\"workspace\":\n\t\t{\t\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff270\",\n\t\t\"name\":\"A\",\t\n\t\t\"type\":\"producer\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\t\t\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\n\t\n\t{\"workspace\":\n\t\t{\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff271\",\t\t\t\n\n\t\t\"name\":\"B\",\t\t\t\n\t\t\n\t\t\"type\":\"workspace\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\n\t\t\"incoming_stream\": \"2\",\t\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\t\n\t{\"workspace\":\n\t\t{\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff272\",\n\t\t\"name\":\"C\",\n\t\t\"type\":\"consumer\",\t\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\n\t\t\"incoming_stream\": \"2\",\t\t\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t}\n\t]\n}\n"
						},
						"url": {
							"raw": "{{http-api}}:/script/",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create chain (without uid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acf0b548-89bb-4928-9cd8-eaffa8799a43",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"name\":\"A\",\n\t\"wr\":\n\t[{\"workspace\":\n\t\t{\t\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff270\",\n\t\t\"name\":\"A\",\t\n\t\t\"type\":\"producer\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\t\n\t{\"workspace\":\n\t\t{\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff271\",\t\t\t\n\n\t\t\"name\":\"B\",\t\t\t\n\t\t\n\t\t\"type\":\"workspace\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\n\t\t\"incoming_stream\": \"2\",\t\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\t\n\t{\"workspace\":\n\t\t{\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff273\",\n\t\t\"name\":\"C\",\n\t\t\"type\":\"consumer\",\t\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\t\t\n\t\t\"incoming_stream\": \"2\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t}\n\t]\n}\n"
						},
						"url": {
							"raw": "{{http-api}}:/script/",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "list chains",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bd91437-0923-46d3-8e58-fabaaa15a8cb",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}:/script/",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "change chain (adding wsp)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f79d5ba7-7fb3-4679-a296-03ac54d37b2c",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"A\",\t\t\n\t\"wr\":\n\t\n\t[{\"workspace\":\n\t\t{\n\t\t\"name\": \"A\",\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff270\",\n\t\t\"type\":\"producer\",\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"222\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\n\t\n\t{\"workspace\":\n\t\t{\"name\":\"new B\",\n\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff271\",\n\t\t\n\t\t\"type\":\"workspace\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\n\t\t\"incoming_stream\": \"222\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\n\t\n\t{\"workspace\":\n\t\t{\"name\":\"C\",\n\t\t\n\t\t\"type\":\"consumer\",\n\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff272\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\n\t\t\"incoming_stream\": \"2\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\n\t{\"workspace\":\n\t\t{\"name\":\"D\",\n\t\t\n\t\t\"type\":\"consumer\",\n\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff273\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\n\t\t\"incoming_stream\": \"2\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t}\n\t]\n}\n"
						},
						"url": {
							"raw": "{{http-api}}:/script/3454f7e41bf14c9f93a44a3f1de6c1b6",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								"3454f7e41bf14c9f93a44a3f1de6c1b6"
							]
						}
					},
					"response": []
				},
				{
					"name": "change chain (remove wsp)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd110be4-06aa-4730-9e7c-09b937345aab",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"A\",\n\t\n\t\"wr\":\n\t\n\t[{\"workspace\":\n\t\t{\n\t\t\"name\": \"A\",\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff270\",\n\t\t\"type\":\"producer\",\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"222\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t},\n\t\n\t{\"workspace\":\n\t\t{\"name\":\"BBB\",\n\t\t\n\t\t\"uid\": \"8709d7235c4b4ff8b1a6c7bd2b4ff271\",\n\t\t\n\t\t\"type\":\"workspace\",\n\t\t\n\t\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\t\"app_ver\":\"1\",\n\t\t\n\t\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\t\"model_ver\":\"1\"\n\t\t},\n\t\"routes\":\n\t\t{\n\t\t\"outgoing_stream\": \"1\",\n\t\t\"incoming_stream\": \"222\",\n\t\t\"pause_stream\": \"true\"\n\t\t}\n\t}\n\t]\n}\n"
						},
						"url": {
							"raw": "{{http-api}}:/script/3454f7e41bf14c9f93a44a3f1de6c1b6",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								"3454f7e41bf14c9f93a44a3f1de6c1b6"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete chain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a3798eb-3db3-4bc9-b202-fc5e233165f2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}:/script/3454f7e41bf14c9f93a44a3f1de6c1b6",
							"host": [
								"{{http-api}}"
							],
							"port": "",
							"path": [
								"script",
								"3454f7e41bf14c9f93a44a3f1de6c1b6"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}