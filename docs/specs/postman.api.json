{
	"info": {
		"_postman_id": "ca2e29c4-9f34-4848-ab98-234b1c8b7b20",
		"name": "Buldozer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "applications",
			"item": [
				{
					"name": "list apps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "create app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "385233f6-ebf3-41ba-9c6d-6e333f4d8a68",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"busybox:latest\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f90e5c7f-49fb-4ded-9c41-549a63af8026",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39866186-7bf6-4f2f-af16-8dde04f05947",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"consul sync test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"buldozer_subordinate:latest\",\n\t\"environment\":{\n\t\t\"LOG_LEVEL\":\"DEBUG\",\n\t\t\"BDZ_PROGRAM\":\"cat\"\n\t}\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5ba6014-be11-430c-b337-3a4cbeed5f3f",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit app version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49af0bb0-70b2-4172-bffa-dd5f8ad5be73",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app version by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "557f9bd1-0e49-4fcf-acec-1722505d7593",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload is object\"] = Object.isPrototypeOf(jsonData)",
									"tests[\"Payload has version as in request\"] = jsonData.version == pm.environment.get(ENV_PREFIX+'ver')"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions/{{app-mgr.last-created-ver}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions",
								"{{app-mgr.last-created-ver}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload app artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18fdaaad-227c-4714-ba5f-3393c716cced",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "models",
			"item": [
				{
					"name": "list models",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "create model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08da28bc-bd5e-4ee1-8e9e-bf992e861b7d",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "get model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e82bf4df-114a-4d8e-8e28-16cab354afa9",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit model version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c5ab6de-2f6b-4bae-ba5e-fe5a22797ff6",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{model-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3440921-ccb2-4502-b601-90a7a1855ef0",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "download model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a16cac57-d986-4acd-bf76-d092858d65d8",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/versions/{{model-mgr.last-created-ver}}/download",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"versions",
								"{{model-mgr.last-created-ver}}",
								"download"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "images",
			"item": [
				{
					"name": "create analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0 or equal\"] = scn_version >= 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"id": "4bef9c6f-10cf-4d78-8086-9d2f99a3c8ca"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete analyzer image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list analyzer images",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"id": "337f1449-5f1d-4f5e-bc2b-75e76d1a624e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "get analyzer image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name changed\"] = jsonData.name == \"test_updated\";",
									""
								],
								"id": "4b032806-dddd-48c5-a98b-758cf78f2e4e"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test_updated\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit analyzer image to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66c1e213-3363-4658-b3db-2d80cdef7837",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"scn_version = jsonData.version;",
									"",
									"tests[\"Etag is greater or equal than 0\"] = scn_version >= 0;",
									"",
									"tests[\"Version is greater than 0\"] = scn_version > postman.getEnvironmentVariable(ENV_PREFIX + \"ver\");",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "workspaces",
			"item": [
				{
					"name": "create workspace Producer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ca96663-6c5f-486b-8cd9-7944ec183d77",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"A\",\n\t\n\t\"type\":\"producer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0058c6a7-d84e-4079-95dc-caea8dcca388",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"H\",\n\t\n\t\"type\":\"consumer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "834e9cc7-749b-4211-b6fe-2bbd866b88b2",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"M\",\n\t\n\t\"type\":\"workspace\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f4279c1-5b42-4820-995d-44948fbf4dcd",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace route conf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace neighbors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/neighbors",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"neighbors"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspaces chain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/chain",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"chain"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Producer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"outgoing_stream\": \"outgoing\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Consumer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"incoming\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"3\", \n\t\"outgoing_stream\": \"4\",\n\t\"pause_stream\": \"false\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}