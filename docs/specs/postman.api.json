{
	"info": {
		"_postman_id": "74fe17cc-91fa-483b-a89e-24b2b617ea08",
		"name": "Buldozer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "applications",
			"item": [
				{
					"name": "list apps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "create app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e33faaca-eed9-406e-b553-6868bfcbf1fb",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"busybox:latest\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c95c628-85d1-45b3-b94c-19e2f5d60de6",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put app",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f52741e8-0da0-4fca-b8e4-47da720f7c73",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"consul sync test\",\n\t\"description\":\"sample app for test\",\n\t\"package\":\"buldozer_subordinate:latest\",\n\t\"environment\":{\n\t\t\"LOG_LEVEL\":\"DEBUG\",\n\t\t\"BDZ_PROGRAM\":\"cat\"\n\t}\n}"
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16268b83-a2b2-4d34-b422-7fbb280a8552",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit app version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78d95277-61d9-4d28-834f-4b52da1d045a",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{app-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get app version by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56a6bf67-f0ea-4764-94e5-7d24f2ed87fd",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload is object\"] = Object.isPrototypeOf(jsonData)",
									"tests[\"Payload has version as in request\"] = jsonData.version == pm.environment.get(ENV_PREFIX+'ver')"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/versions/{{app-mgr.last-created-ver}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"versions",
								"{{app-mgr.last-created-ver}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload app artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b817bef9-72d1-4422-a192-64ecf5d1580f",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/applications/{{app-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"applications",
								"{{app-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "models",
			"item": [
				{
					"name": "list models",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "create model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2890ffb-adc8-4f7b-a8ce-028b5d5bff2b",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/models",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "get model",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39705403-8e13-4bf0-8ae2-d9d7dd7f807e",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0\"] = scn_version > 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit model version to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3490ebe-c1a2-4684-8ee5-decb81efddfb",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'model-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									"tests[\"Response has version\"] = jsonData.version !== undefined",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"pm.environment.set(ENV_PREFIX + 'ver', jsonData.version)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "x-if-version",
								"value": "{{model-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56ef68a9-040b-488f-a5f3-f4535dd0d2c3",
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/upload",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "download model artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7aec2be-e545-49bb-aa94-0c6d079047f9",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'app-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"etag_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Etag is greater then 0\"] = etag_version > 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/models/{{model-mgr.last-created-uid}}/versions/{{model-mgr.last-created-ver}}/download",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"models",
								"{{model-mgr.last-created-uid}}",
								"versions",
								"{{model-mgr.last-created-ver}}",
								"download"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "images",
			"item": [
				{
					"name": "create analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"tests[\"ETag is present\"] = postman.getResponseHeader(ETAG);",
									"tests[\"ETag is numeric\"] = /^\\d+$/.test(postman.getResponseHeader(ETAG));",
									"",
									"scn_version = parseInt(postman.getResponseHeader(ETAG))",
									"",
									"tests[\"Etag is greater then 0 or equal\"] = scn_version >= 0;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"id": "3cfa1f3f-d9a4-48eb-aa55-04ae63bee33d"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete analyzer image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list analyzer images",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"id": "0e1466f7-84e1-462c-a20e-ee2714569891"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/images",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "get analyzer image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update analyzer image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name changed\"] = jsonData.name == \"test_updated\";",
									""
								],
								"id": "09bfa8a7-7ed9-48a8-9f41-e6e29bf8c50b"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"test_updated\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\",\n\t\n\t\"description\":\"\",\n\t\"tags\":[\n\t\t\"test_tag_1\",\"test_tag_2\"\n\t\t],\n\t\"params\":[\n\t\t{\n\t\t\t\"name\":\"param1\",\n\t\t\t\"type\":\"type1\",\n\t\t\t\"value\":\"value1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "commit analyzer image to archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b544c916-9b13-42b7-9767-ae79a303cf15",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'img-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"scn_version = jsonData.version;",
									"",
									"tests[\"Etag is greater or equal than 0\"] = scn_version >= 0;",
									"",
									"tests[\"Version is greater than 0\"] = scn_version > postman.getEnvironmentVariable(ENV_PREFIX + \"ver\");",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"ver\", scn_version);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-If-Version",
								"value": "{{img-mgr.last-created-ver}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{http-api}}/images/{{img-mgr.last-created-uid}}/commit",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"images",
								"{{img-mgr.last-created-uid}}",
								"commit"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "workspaces",
			"item": [
				{
					"name": "create workspace Producer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2567710-0164-4706-8d50-afde4ac818d2",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"A\",\n\t\n\t\"type\":\"producer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59a3101e-9b1b-4abf-8b5f-8f511a60c8ee",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"H\",\n\t\n\t\"type\":\"consumer\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "create workspace Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73aa2394-3e41-4b3c-9766-04c3fb640591",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"M\",\n\t\n\t\"type\":\"workspace\",\n\t\n\t\"app_id\":\"{{app-mgr.last-created-uid}}\",\n\t\"app_ver\":\"{{app-mgr.last-created-ver}}\",\n\t\n\t\"model_id\":\"{{model-mgr.last-created-uid}}\",\n\t\"model_ver\":\"{{model-mgr.last-created-ver}}\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "965e64e3-4235-4add-ab15-4a335f3eba02",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace health",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}:8102/workspaces/{{wsp-mgr.last-created-uid}}/health",
							"host": [
								"{{http-api}}"
							],
							"port": "8102",
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace route conf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspace neighbors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/neighbors",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"neighbors"
							]
						}
					},
					"response": []
				},
				{
					"name": "get workspaces chain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"url": {
							"raw": "{{http-api}}/workspaces/chain",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"chain"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Producer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"outgoing_stream\": \"outgoing\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Consumer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"incoming\",\n\t\"pause_stream\": \"true\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "put workspace route conf Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"incoming_stream\": \"3\", \n\t\"outgoing_stream\": \"4\",\n\t\"pause_stream\": \"false\"\n}"
						},
						"url": {
							"raw": "{{http-api}}/workspaces/{{wsp-mgr.last-created-uid}}/route",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"workspaces",
								"{{wsp-mgr.last-created-uid}}",
								"route"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "script",
			"item": [
				{
					"name": "create chain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5531068-02e3-48e3-a50f-a19e7f8c9e5d",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payload has uid\"] = jsonData.uid !== undefined;",
									"",
									"postman.setEnvironmentVariable(ENV_PREFIX + \"uid\", jsonData.uid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uid\": \"f6f96f0656ce4b0e927598d541c85352\",\n  \"properties\": {\n      \"name\": \"A\"\n  },\n  \"resources\": [\n  {\n      \"label\": \"MyAwesomeWorkspace\",\n      \"clss\": \"producer\",\n      \n     \n      \"properties\": {\n        \"uid\": \"\",\n        \"name\": \"abc\",\n        \"application\": {\"id\":  \"{{app-mgr.last-created-uid}}\", \"version\": 1},\n        \"model\": {\"id\":  \"{{model-mgr.last-created-uid}}\", \"version\": 1},\n        \"pause_stream\": \"false|true\"\n      },\n      \"routes\": {       \n        \"outgoing\": [{\"ref\":  \"SomeChannel\"}]\n      }\n    },\n    {\n      \"label\": \"MyNiceWorkspace\",\n      \"clss\": \"workspace\",\n      \n      \n      \"properties\": {\n        \"uid\": \"ad7ecf2baf904f8a994ad9cae0d99b94\",\n        \"name\": \"cba\",\n        \"application\": {\"id\":  \"{{app-mgr.last-created-uid}}\", \"version\": 1},\n        \"model\": {\"id\":  \"{{model-mgr.last-created-uid}}\", \"version\": 1},\n        \"pause_stream\": \"true|false\"\n      },\n      \"routes\": {\n        \"incoming\": [{\"ref\":  \"SomeChannel\"}],\n        \"outgoing\": [{\"ref\":  \"SomeChannel2\"}]\n      }\n    },\n    {\n      \"label\": \"SomeChannel\",\n      \"clss\": \"channel\",\n      \n      \"properties\": {\n        \"name\": \"21\",\n        \"kafka_topic\": \"topic-name\"\n      }\n      \n    },\n    {\n      \"label\": \"SomeChannel2\",\n      \"clss\": \"channel\",\n      \n      \"properties\": {\n        \"name\": \"213\",\n        \"kafka_topic\": \"topic-name2\"\n      }\n      \n    }\n  ]\n}\n"
						},
						"url": {
							"raw": "{{http-api}}/scripts",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"scripts"
							]
						}
					},
					"response": []
				},
				{
					"name": "list chains",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b43ece-492d-43a9-a49b-578b8aae665e",
								"exec": [
									"var ETAG = 'X-Version',",
									"    ENV_PREFIX = 'wsp-mgr.last-created-'",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Content-Type is json\"] = (postman.getResponseHeader(\"Content-Type\").split(';')[0] == 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{http-api}}/scripts",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"scripts"
							]
						}
					},
					"response": []
				},
				{
					"name": "get manifest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8508b58b-8bcc-48d2-a39b-ca1e1c921a9a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/scripts/f6f96f0656ce4b0e927598d541c85352",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"scripts",
								"f6f96f0656ce4b0e927598d541c85352"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete chain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5e380d4-1f0e-42e8-86f0-99307ee0f063",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-user-id",
								"value": "{{user-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{http-api}}/scripts/f6f96f0656ce4b0e927598d541c85352",
							"host": [
								"{{http-api}}"
							],
							"path": [
								"scripts",
								"f6f96f0656ce4b0e927598d541c85352"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6e180af7-382d-4c15-840c-17f12b1724b6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7f8d3892-1bad-4cd0-b88a-5777b7d270fa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}